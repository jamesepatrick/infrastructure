#cloud-config
write_files:
- path: /etc/nixos/host.nix
  permissions: '0644'
  encoding: base64
  content: ${base64encode(host_file)}
- path: /etc/NIXOS_LUSTRATE
  permissions: '0600'
  content: |
    /opt/infrastructure
- path: /opt/disk_setup.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    [ ! -e /dev/sdb ] && ( echo "Cannot find mount. Aborting." ; exit 1 )
    # unmount if mounted. Ubuntu will try to automount everything.
    umount /dev/sdb 2>&1 >/dev/null
    # Format as EXT4 if not already so.
    if [[ "$(blkid /dev/sdb)" != *'TYPE="ext4"'* ]] ; then
      mkfs.ext4 -F /dev/sdb
    fi
    # Name volume
    if [[ "$(e2label /dev/sdb )" != 'data' ]] ; then
      e2label /dev/sdb data
    fi
users:
  - default
  # temporary user. Used to have access to the machine during the transitive period
  - name: terraform
    gecos: terraform
    group: terraform
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    ssh_import_id:
      - gh:jamesepatrick
    lock_passwd: false
runcmd:
  - /opt/disk_setup.sh
  - >
    git clone https://github.com/jamesepatrick/infrastructure /opt/infrastructure
    ; cd /opt/infrastructure
    ; git remote set-url origin git@github.com:jamesepatrick/infrastructure.git
  - >
    curl https://raw.githubusercontent.com/elitak/nixos-infect/master/nixos-infect
    | PROVIDER=hetznercloud NIXOS_IMPORT=./host.nix NIX_CHANNEL=nixos-unstable bash 2>&1
    | tee /tmp/infect.log
